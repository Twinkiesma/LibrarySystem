<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- 扫描dao包下所有使⽤注解的类型 -->
    <context:component-scan base-package="dao"/>
    <!-- 扫描service包下所有使⽤注解的类型 -->
    <context:component-scan base-package="service"/>

    <!-- 引入数据库配置文件-->
    <context:property-placeholder location="classpath*:database.properties"/>
    <!-- 配置数据源 DBCP半自动化的连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 创建会话工厂 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 扫描映射的位置 -->
        <property name="mapperLocations" value="classpath:MyBatis/*"/>
    </bean>
    <!-- 将sqlSessionFactory(会话工厂)注入到sqlSessionTemplate(Dao)中 -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

</beans>